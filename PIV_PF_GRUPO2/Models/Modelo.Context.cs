//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PIV_PF_GRUPO2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PIV_PF_ProyectoFinalEntities4 : DbContext
    {
        public PIV_PF_ProyectoFinalEntities4()
            : base("name=PIV_PF_ProyectoFinalEntities4")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ESTADO_PRODUCTO> ESTADO_PRODUCTO { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<T_ACCIONES> T_ACCIONES { get; set; }
        public virtual DbSet<T_ADMINISTRADOR> T_ADMINISTRADOR { get; set; }
        public virtual DbSet<T_CALCULO_SUBTOTAL> T_CALCULO_SUBTOTAL { get; set; }
        public virtual DbSet<T_CARGO_METODO_PAGO> T_CARGO_METODO_PAGO { get; set; }
        public virtual DbSet<T_CLIENTE> T_CLIENTE { get; set; }
        public virtual DbSet<T_ESTADO_USUARIO> T_ESTADO_USUARIO { get; set; }
        public virtual DbSet<T_FACTURACION> T_FACTURACION { get; set; }
        public virtual DbSet<T_METODO_PAGO> T_METODO_PAGO { get; set; }
        public virtual DbSet<T_PRODUCTOFACTURACION> T_PRODUCTOFACTURACION { get; set; }
        public virtual DbSet<T_ROL_OPERACION> T_ROL_OPERACION { get; set; }
        public virtual DbSet<T_TIPO_PRODUCTO> T_TIPO_PRODUCTO { get; set; }
        public virtual DbSet<T_TIPO_USUARIO> T_TIPO_USUARIO { get; set; }
        public virtual DbSet<T_USUARIO> T_USUARIO { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_datos_Result> sp_datos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_datos_Result>("sp_datos");
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_EliminarClienteSinCompras(Nullable<int> iD_CLIENTE)
        {
            var iD_CLIENTEParameter = iD_CLIENTE.HasValue ?
                new ObjectParameter("ID_CLIENTE", iD_CLIENTE) :
                new ObjectParameter("ID_CLIENTE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarClienteSinCompras", iD_CLIENTEParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_ObtenerDatosUsuarioPorID_Result> sp_ObtenerDatosUsuarioPorID(Nullable<int> id_usuario)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ObtenerDatosUsuarioPorID_Result>("sp_ObtenerDatosUsuarioPorID", id_usuarioParameter);
        }
    
        public virtual ObjectResult<sp_permisos_Result> sp_permisos(Nullable<int> iD_Tipo_USUARIO)
        {
            var iD_Tipo_USUARIOParameter = iD_Tipo_USUARIO.HasValue ?
                new ObjectParameter("ID_Tipo_USUARIO", iD_Tipo_USUARIO) :
                new ObjectParameter("ID_Tipo_USUARIO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_permisos_Result>("sp_permisos", iD_Tipo_USUARIOParameter);
        }
    
        public virtual int sp_RegistrarUsuario(string nOMBRE_USUARIO, string eMAIL, Nullable<int> tIPO_USUARIO, string eSTADO_USUARIO, string cLAVE, ObjectParameter registrado, ObjectParameter mensaje)
        {
            var nOMBRE_USUARIOParameter = nOMBRE_USUARIO != null ?
                new ObjectParameter("NOMBRE_USUARIO", nOMBRE_USUARIO) :
                new ObjectParameter("NOMBRE_USUARIO", typeof(string));
    
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var tIPO_USUARIOParameter = tIPO_USUARIO.HasValue ?
                new ObjectParameter("TIPO_USUARIO", tIPO_USUARIO) :
                new ObjectParameter("TIPO_USUARIO", typeof(int));
    
            var eSTADO_USUARIOParameter = eSTADO_USUARIO != null ?
                new ObjectParameter("ESTADO_USUARIO", eSTADO_USUARIO) :
                new ObjectParameter("ESTADO_USUARIO", typeof(string));
    
            var cLAVEParameter = cLAVE != null ?
                new ObjectParameter("CLAVE", cLAVE) :
                new ObjectParameter("CLAVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarUsuario", nOMBRE_USUARIOParameter, eMAILParameter, tIPO_USUARIOParameter, eSTADO_USUARIOParameter, cLAVEParameter, registrado, mensaje);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<sp_ValidarUsuario_Result> sp_ValidarUsuario(string eMAIL, string cLAVE)
        {
            var eMAILParameter = eMAIL != null ?
                new ObjectParameter("EMAIL", eMAIL) :
                new ObjectParameter("EMAIL", typeof(string));
    
            var cLAVEParameter = cLAVE != null ?
                new ObjectParameter("CLAVE", cLAVE) :
                new ObjectParameter("CLAVE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ValidarUsuario_Result>("sp_ValidarUsuario", eMAILParameter, cLAVEParameter);
        }
    }
}
